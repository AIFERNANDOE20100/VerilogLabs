$date
	Tue Apr 09 21:18:59 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module alu_tb $end
$scope module alu_instance $end
$var wire 8 ! data1 [7:0] $end
$var wire 8 " data2 [7:0] $end
$var wire 3 # select [2:0] $end
$var wire 8 $ sub_result [7:0] $end
$var wire 8 % or_result [7:0] $end
$var wire 8 & mov_result [7:0] $end
$var wire 8 ' and_result [7:0] $end
$var wire 8 ( add_result [7:0] $end
$var reg 8 ) result [7:0] $end
$scope module u0 $end
$var wire 8 * data2 [7:0] $end
$var wire 8 + result [7:0] $end
$upscope $end
$scope module u1 $end
$var wire 8 , data1 [7:0] $end
$var wire 8 - data2 [7:0] $end
$var wire 8 . result [7:0] $end
$upscope $end
$scope module u2 $end
$var wire 8 / data1 [7:0] $end
$var wire 8 0 data2 [7:0] $end
$var wire 8 1 result [7:0] $end
$upscope $end
$scope module u3 $end
$var wire 8 2 data1 [7:0] $end
$var wire 8 3 data2 [7:0] $end
$var wire 8 4 result [7:0] $end
$upscope $end
$scope module u4 $end
$var wire 8 5 data1 [7:0] $end
$var wire 8 6 data2 [7:0] $end
$var wire 8 7 result [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 7
b0 6
b0 5
b0 4
b0 3
b0 2
b0 1
b0 0
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
bx )
b0 (
b0 '
b0 &
b0 %
b0 $
b0 #
b0 "
b0 !
$end
#1000
b0 )
#10000
b11111111 %
b11111111 7
b1010101 &
b1010101 +
b1010101 "
b1010101 *
b1010101 -
b1010101 0
b1010101 3
b1010101 6
b11111111 (
b11111111 .
b1010101 $
b1010101 1
b10101010 !
b10101010 ,
b10101010 /
b10101010 2
b10101010 5
#11000
b1010101 )
#20000
b10 '
b10 4
b10101011 %
b10101011 7
b1 #
b11 &
b11 +
b10101101 (
b10101101 .
b10100111 $
b10100111 1
b11 "
b11 *
b11 -
b11 0
b11 3
b11 6
#22000
b10101101 )
#30000
b10101000 '
b10101000 4
b11111111 %
b11111111 7
b11111101 &
b11111101 +
b10100111 (
b10100111 .
b10101101 $
b10101101 1
b11111101 "
b11111101 *
b11111101 -
b11111101 0
b11111101 3
b11111101 6
#32000
b10100111 )
#40000
b10 #
#41000
b10101000 )
#50000
b11 #
#51000
b11111111 )
#60000
