$date
	Wed May 15 15:55:18 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module cpu_tb $end
$var wire 32 ! PC [31:0] $end
$var wire 32 " INSTRUCTION [31:0] $end
$var reg 1 # CLK $end
$var reg 1 $ RESET $end
$var integer 32 % i [31:0] $end
$scope module mycpu $end
$var wire 1 # CLK $end
$var wire 32 & INSTRUCTION [31:0] $end
$var wire 1 $ RESET $end
$var wire 1 ' ZERO_and_BRANCHSELECT $end
$var wire 1 ( ZERO $end
$var wire 3 ) WRITEREG [2:0] $end
$var wire 1 * WRITEENABLE $end
$var wire 8 + TWOS_COMP_SELECTED [7:0] $end
$var wire 1 , TWOS_COMP_SELECT $end
$var wire 8 - TWOS_COMP [7:0] $end
$var wire 32 . SIGNEXTENDEDJUMP [31:0] $end
$var wire 32 / SIGNEXTENDEDBRANCH [31:0] $end
$var wire 8 0 REGOUT2 [7:0] $end
$var wire 8 1 REGOUT1 [7:0] $end
$var wire 3 2 READREG2 [2:0] $end
$var wire 3 3 READREG1 [2:0] $end
$var wire 32 4 PCOUT [31:0] $end
$var wire 8 5 OPCODE [7:0] $end
$var wire 32 6 NEXTPCOUT [31:0] $end
$var wire 32 7 LEFTSHIFTEDJUMP [31:0] $end
$var wire 32 8 LEFTSHIFTEDBRANCH [31:0] $end
$var wire 32 9 JUMP_SELECTED [31:0] $end
$var wire 1 : JUMP_SELECT $end
$var wire 8 ; JUMPINSTRUCTION [7:0] $end
$var wire 32 < JUMPADDRESS [31:0] $end
$var wire 8 = IMMIDIATE_SELECTED [7:0] $end
$var wire 1 > IMMIDIATE_SELECT $end
$var wire 8 ? IMMIDIATE [7:0] $end
$var wire 32 @ BRANCH_SELECTED [31:0] $end
$var wire 1 A BRANCH_SELECT $end
$var wire 8 B BRANCHINSTRUCTION [7:0] $end
$var wire 32 C BRANCHADDRESS [31:0] $end
$var wire 8 D ALURESULT [7:0] $end
$var wire 3 E ALUOP [2:0] $end
$scope module alu $end
$var wire 8 F SL_RESULT [7:0] $end
$var wire 3 G SELECT [2:0] $end
$var wire 8 H SA_RESULT [7:0] $end
$var wire 8 I OR_RESULT [7:0] $end
$var wire 8 J MULT_RESULT [7:0] $end
$var wire 8 K MOV_RESULT [7:0] $end
$var wire 8 L DATA2 [7:0] $end
$var wire 8 M DATA1 [7:0] $end
$var wire 8 N AND_RESULT [7:0] $end
$var wire 8 O ADD_RESULT [7:0] $end
$var reg 8 P RESULT [7:0] $end
$var reg 1 ( ZERO $end
$scope module add1 $end
$var wire 8 Q DATA2 [7:0] $end
$var wire 8 R DATA1 [7:0] $end
$var reg 8 S RESULT [7:0] $end
$upscope $end
$scope module and1 $end
$var wire 8 T RESULT [7:0] $end
$var wire 8 U DATA2 [7:0] $end
$var wire 8 V DATA1 [7:0] $end
$upscope $end
$scope module mov1 $end
$var wire 8 W RESULT [7:0] $end
$var wire 8 X DATA2 [7:0] $end
$upscope $end
$scope module mult1 $end
$var wire 8 Y RESULT [7:0] $end
$var wire 8 Z DATA2 [7:0] $end
$var wire 8 [ DATA1 [7:0] $end
$upscope $end
$scope module or1 $end
$var wire 8 \ RESULT [7:0] $end
$var wire 8 ] DATA2 [7:0] $end
$var wire 8 ^ DATA1 [7:0] $end
$upscope $end
$scope module sa1 $end
$var wire 8 _ SHIFTAMOUNT [7:0] $end
$var wire 8 ` DATA [7:0] $end
$var reg 8 a OFFSET [7:0] $end
$var reg 8 b RESULT [7:0] $end
$var integer 32 c i [31:0] $end
$var integer 32 d j [31:0] $end
$upscope $end
$scope module sl1 $end
$var wire 8 e SHIFTAMOUNT [7:0] $end
$var wire 8 f DATA [7:0] $end
$var reg 8 g OFFSET [7:0] $end
$var reg 8 h RESULT [7:0] $end
$var integer 32 i i [31:0] $end
$var integer 32 j j [31:0] $end
$upscope $end
$upscope $end
$scope module alu_immidiate_mux $end
$var wire 1 > SELECT $end
$var wire 8 k DATA2 [7:0] $end
$var wire 8 l DATA1 [7:0] $end
$var reg 8 m RESULT [7:0] $end
$upscope $end
$scope module branch_add $end
$var wire 32 n PCOUT [31:0] $end
$var wire 32 o LEFTSHIFTEDBRANCH [31:0] $end
$var reg 32 p BRANCHADDRESS [31:0] $end
$upscope $end
$scope module branch_and $end
$var wire 1 ( DATA2 $end
$var wire 1 ' RESULT $end
$var wire 1 A DATA1 $end
$upscope $end
$scope module branch_select_mux $end
$var wire 32 q DATA2 [31:0] $end
$var wire 1 ' SELECT $end
$var wire 32 r DATA1 [31:0] $end
$var reg 32 s RESULT [31:0] $end
$upscope $end
$scope module control_unit $end
$var wire 8 t OPCODE [7:0] $end
$var reg 3 u ALU_OP [2:0] $end
$var reg 1 A BRANCH_SELECT $end
$var reg 1 > IMMIDIATE_SELECT $end
$var reg 1 : JUMP_SELECT $end
$var reg 1 * REG_WRITE $end
$var reg 1 , TWOS_COMP $end
$upscope $end
$scope module instruction_decoder $end
$var wire 32 v INSTRUCTION [31:0] $end
$var reg 8 w BRANCHADDRESS [7:0] $end
$var reg 8 x IMMIDIATE [7:0] $end
$var reg 8 y JUMPADDRESS [7:0] $end
$var reg 8 z OPCODE [7:0] $end
$var reg 3 { REGISTER_1 [2:0] $end
$var reg 3 | REGISTER_2 [2:0] $end
$var reg 3 } REGISTER_DEST [2:0] $end
$upscope $end
$scope module jump_concatenate $end
$var wire 32 ~ PCOUT [31:0] $end
$var wire 32 !" LEFTSHIFTEDJUMP [31:0] $end
$var reg 32 "" JUMPADDRESS [31:0] $end
$upscope $end
$scope module jump_select_mux $end
$var wire 32 #" DATA1 [31:0] $end
$var wire 32 $" DATA2 [31:0] $end
$var wire 1 : SELECT $end
$var reg 32 %" RESULT [31:0] $end
$upscope $end
$scope module left_shift_for_branch $end
$var wire 32 &" INPUT [31:0] $end
$var reg 32 '" OUTPUT [31:0] $end
$upscope $end
$scope module left_shift_for_jump $end
$var wire 32 (" INPUT [31:0] $end
$var reg 32 )" OUTPUT [31:0] $end
$upscope $end
$scope module pc $end
$var wire 1 # CLK $end
$var wire 1 $ RESET $end
$var wire 32 *" SELECTEDOUTPUT [31:0] $end
$var reg 32 +" NEXTPCOUT [31:0] $end
$var reg 32 ," PCOUT [31:0] $end
$upscope $end
$scope module reg_file $end
$var wire 1 # CLK $end
$var wire 8 -" IN [7:0] $end
$var wire 3 ." INADDRESS [2:0] $end
$var wire 8 /" OUT1 [7:0] $end
$var wire 3 0" OUT1ADDRESS [2:0] $end
$var wire 8 1" OUT2 [7:0] $end
$var wire 3 2" OUT2ADDRESS [2:0] $end
$var wire 1 $ RESET $end
$var wire 1 * WRITE $end
$upscope $end
$scope module sign_extender_for_branch $end
$var wire 8 3" INPUT [7:0] $end
$var reg 32 4" OUTPUT [31:0] $end
$upscope $end
$scope module sign_extender_for_jump $end
$var wire 8 5" INPUT [7:0] $end
$var reg 32 6" OUTPUT [31:0] $end
$upscope $end
$scope module twos_complement_mux $end
$var wire 8 7" DATA1 [7:0] $end
$var wire 1 , SELECT $end
$var wire 8 8" DATA2 [7:0] $end
$var reg 8 9" RESULT [7:0] $end
$upscope $end
$scope module twoscomp $end
$var wire 8 :" DATA [7:0] $end
$var reg 8 ;" RESULT [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module reg_file $end
$var reg 8 <" \registers[0] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module reg_file $end
$var reg 8 =" \registers[1] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module reg_file $end
$var reg 8 >" \registers[2] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module reg_file $end
$var reg 8 ?" \registers[3] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module reg_file $end
$var reg 8 @" \registers[4] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module reg_file $end
$var reg 8 A" \registers[5] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module reg_file $end
$var reg 8 B" \registers[6] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module reg_file $end
$var reg 8 C" \registers[7] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx C"
bx B"
bx A"
bx @"
bx ?"
bx >"
bx ="
bx <"
bx ;"
bx :"
bx 9"
bx 8"
bx 7"
bx 6"
bx 5"
bx 4"
bx 3"
bx 2"
bx 1"
bx 0"
bx /"
bx ."
bx -"
bx ,"
bx +"
bx *"
bx )"
bx ("
bx '"
bx &"
bx %"
bx $"
bx #"
bx ""
bx !"
bx ~
bx }
bx |
bx {
bx z
bx y
bx x
bx w
bx v
bx u
bx t
bx s
bx r
bx q
bx p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
bx h
bx g
bx f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
xA
bx @
bx ?
x>
bx =
bx <
bx ;
x:
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
x,
bx +
x*
bx )
x(
x'
bx &
b1000 %
1$
0#
bx "
bx !
$end
#4
1#
#5
b100 7
b100 !"
b100 )"
b100 8
b100 o
b100 '"
b1 .
b1 ("
b1 6"
b1 /
b1 &"
b1 4"
b1 ;
b1 y
b1 5"
b1 B
b1 w
b1 3"
b11 ?
b11 k
b11 x
b1 )
b1 }
b1 ."
b11 2
b11 |
b11 2"
b0 3
b0 {
b0 0"
b0 5
b0 t
b0 z
b10000000000000011 "
b10000000000000011 &
b10000000000000011 v
b0 !
b0 4
b0 ,"
b0 C"
b0 B"
b0 A"
b0 @"
b0 ?"
b0 >"
b0 ="
b0 <"
#6
b100 9
b100 %"
b100 *"
b1000 C
b1000 p
b1000 q
b100 @
b100 s
b100 #"
b1000 <
b1000 ""
b1000 $"
b100 6
b100 n
b100 r
b100 ~
b100 +"
bx11 I
bx11 \
b0xx N
b0xx T
b0 d
b11 c
b11 a
b0 j
b11 i
b11 g
0'
b11 K
b11 W
b11 =
b11 L
b11 Q
b11 U
b11 X
b11 Z
b11 ]
b11 _
b11 e
b11 m
0:
0A
1*
1>
0,
b0 E
b0 G
b0 u
0$
#7
0(
b0 +
b0 l
b0 9"
b11 I
b11 \
b0 N
b0 T
b11 O
b11 S
b0 d
b11 c
b0 H
b0 b
b0 j
b11 i
b0 F
b0 h
b11 D
b11 P
b11 -"
b0 0
b0 1"
b0 7"
b0 :"
b0 J
b0 Y
b0 1
b0 M
b0 R
b0 V
b0 [
b0 ^
b0 `
b0 f
b0 /"
#8
b0 -
b0 8"
b0 ;"
0#
#12
1#
#13
b1100 <
b1100 ""
b1100 $"
b1100 C
b1100 p
b1100 q
b1000 7
b1000 !"
b1000 )"
b1000 8
b1000 o
b1000 '"
b100 I
b100 \
b100 O
b100 S
b0 d
b100 c
b100 a
b0 j
b100 i
b100 g
b10 .
b10 ("
b10 6"
b10 /
b10 &"
b10 4"
b100 K
b100 W
b100 =
b100 L
b100 Q
b100 U
b100 X
b100 Z
b100 ]
b100 _
b100 e
b100 m
b10 ;
b10 y
b10 5"
b10 B
b10 w
b10 3"
b100 ?
b100 k
b100 x
b10 )
b10 }
b10 ."
b100 2
b100 |
b100 2"
b11 ="
b100000000000000100 "
b100000000000000100 &
b100000000000000100 v
b100 !
b100 4
b100 ,"
#14
b1000 9
b1000 %"
b1000 *"
b10000 C
b10000 p
b10000 q
b1000 @
b1000 s
b1000 #"
b10000 <
b10000 ""
b10000 $"
b1000 6
b1000 n
b1000 r
b1000 ~
b1000 +"
b100 D
b100 P
b100 -"
#16
0#
#20
1#
#21
b11000 <
b11000 ""
b11000 $"
b11000 C
b11000 p
b11000 q
b10000 7
b10000 !"
b10000 )"
b10000 8
b10000 o
b10000 '"
b10 I
b10 \
b10 O
b10 S
b0 d
b10 c
b10 a
b0 j
b10 i
b10 g
b100 .
b100 ("
b100 6"
b100 /
b100 &"
b100 4"
b10 K
b10 W
b10 =
b10 L
b10 Q
b10 U
b10 X
b10 Z
b10 ]
b10 _
b10 e
b10 m
b100 ;
b100 y
b100 5"
b100 B
b100 w
b100 3"
b10 ?
b10 k
b10 x
b100 )
b100 }
b100 ."
b10 2
b10 |
b10 2"
b1 3
b1 {
b1 0"
b1000 5
b1000 t
b1000 z
b1000000001000000000100000010 "
b1000000001000000000100000010 &
b1000000001000000000100000010 v
b1000 !
b1000 4
b1000 ,"
b100 >"
#22
b1100 9
b1100 %"
b1100 *"
b11100 C
b11100 p
b11100 q
b1100 @
b1100 s
b1100 #"
b11100 <
b11100 ""
b11100 $"
b1100 6
b1100 n
b1100 r
b1100 ~
b1100 +"
1(
b0 I
b0 \
b0 O
b0 S
b0 c
b0 a
b0 i
b0 g
b0 K
b0 W
b0 =
b0 L
b0 Q
b0 U
b0 X
b0 Z
b0 ]
b0 _
b0 e
b0 m
b10 D
b10 P
b10 -"
0>
b100 E
b100 G
b100 u
#23
b100 c
b0 d
b100 a
b100 i
b0 j
b100 g
b1100 J
b1100 Y
b100 K
b100 W
b100 =
b100 L
b100 Q
b100 U
b100 X
b100 Z
b100 ]
b100 _
b100 e
b100 m
0(
b100 +
b100 l
b100 9"
b111 I
b111 \
b111 O
b111 S
b111111 H
b111111 b
b111111 F
b111111 h
b100 0
b100 1"
b100 7"
b100 :"
b11 1
b11 M
b11 R
b11 V
b11 [
b11 ^
b11 `
b11 f
b11 /"
#24
b11111100 -
b11111100 8"
b11111100 ;"
b1100 D
b1100 P
b1100 -"
0#
#28
1#
#29
b11 ?
b11 k
b11 x
b11 2
b11 |
b11 2"
b100 3
b100 {
b100 0"
b1001 5
b1001 t
b1001 z
b1100 @"
b1001000001000000010000000011 "
b1001000001000000010000000011 &
b1001000001000000010000000011 v
b1100 !
b1100 4
b1100 ,"
#30
b10000 9
b10000 %"
b10000 *"
b100000 C
b100000 p
b100000 q
b10000 @
b10000 s
b10000 #"
b100000 <
b100000 ""
b100000 $"
b10000 6
b10000 n
b10000 r
b10000 ~
b10000 +"
b11 I
b11 \
b11 N
b11 T
b110 O
b110 S
b0 d
b11 c
b11 a
b11111 H
b11111 b
b0 j
b11 i
b11 g
b11111 F
b11111 h
b1001 J
b1001 Y
b11 K
b11 W
b11 =
b11 L
b11 Q
b11 U
b11 X
b11 Z
b11 ]
b11 _
b11 e
b11 m
1>
b101 E
b101 G
b101 u
#31
b0 +
b0 l
b0 9"
b1111 I
b1111 \
b0 N
b0 T
b1111 O
b1111 S
b0 d
b11 c
b1100000 H
b1100000 b
b0 j
b11 i
b1100000 F
b1100000 h
b0 0
b0 1"
b0 7"
b0 :"
b100100 J
b100100 Y
b1100 1
b1100 M
b1100 R
b1100 V
b1100 [
b1100 ^
b1100 `
b1100 f
b1100 /"
#32
b0 -
b0 8"
b0 ;"
b1100000 D
b1100000 P
b1100000 -"
0#
#36
1#
#37
b11111101 I
b11111101 \
b1100 N
b1100 T
b1001 O
b1001 S
b1000 d
b11 c
b1 H
b1 b
b1000 j
b11 i
b1 F
b1 h
b11011100 J
b11011100 Y
b11111101 K
b11111101 W
b11111101 =
b11111101 L
b11111101 Q
b11111101 U
b11111101 X
b11111101 Z
b11111101 ]
b11111101 _
b11111101 e
b11111101 m
b11111101 ?
b11111101 k
b11111101 x
b101 2
b101 |
b101 2"
b1001000001000000010011111101 "
b1001000001000000010011111101 &
b1001000001000000010011111101 v
b10000 !
b10000 4
b10000 ,"
b1100000 @"
#38
b10100 9
b10100 %"
b10100 *"
b100100 C
b100100 p
b100100 q
b10100 @
b10100 s
b10100 #"
b100100 <
b100100 ""
b100100 $"
b10100 6
b10100 n
b10100 r
b10100 ~
b10100 +"
#39
b1100000 N
b1100000 T
b1011101 O
b1011101 S
b1000 d
b11 c
b1100 H
b1100 b
b1000 j
b11 i
b1100 F
b1100 h
b1 D
b1 P
b1 -"
b11100000 J
b11100000 Y
b1100000 1
b1100000 M
b1100000 R
b1100000 V
b1100000 [
b1100000 ^
b1100000 `
b1100000 f
b1100000 /"
#40
0#
#41
b1100 D
b1100 P
b1100 -"
#44
1#
#45
b101000 <
b101000 ""
b101000 $"
b101000 C
b101000 p
b101000 q
b10100 7
b10100 !"
b10100 )"
b10100 8
b10100 o
b10100 '"
b11110000 I
b11110000 \
b1010000 O
b1010000 S
b1000 d
b10000 c
b10000 a
b0 H
b0 b
b1000 j
b10000 i
b10000 g
b0 F
b0 h
b101 .
b101 ("
b101 6"
b101 /
b101 &"
b101 4"
b0 J
b0 Y
b11110000 K
b11110000 W
b11110000 =
b11110000 L
b11110000 Q
b11110000 U
b11110000 X
b11110000 Z
b11110000 ]
b11110000 _
b11110000 e
b11110000 m
b101 ;
b101 y
b101 5"
b101 B
b101 w
b101 3"
b11110000 ?
b11110000 k
b11110000 x
b101 )
b101 }
b101 ."
b0 2
b0 |
b0 2"
b0 3
b0 {
b0 0"
b0 5
b0 t
b0 z
b1100 @"
b1010000000011110000 "
b1010000000011110000 &
b1010000000011110000 v
b10100 !
b10100 4
b10100 ,"
#46
b11000 9
b11000 %"
b11000 *"
b101100 C
b101100 p
b101100 q
b11000 @
b11000 s
b11000 #"
b101100 <
b101100 ""
b101100 $"
b11000 6
b11000 n
b11000 r
b11000 ~
b11000 +"
b0 E
b0 G
b0 u
#47
b0 N
b0 T
b11110000 O
b11110000 S
b0 H
b0 b
b1000 d
b10000 c
b0 F
b0 h
b1000 j
b10000 i
b0 D
b0 P
b0 -"
b0 1
b0 M
b0 R
b0 V
b0 [
b0 ^
b0 `
b0 f
b0 /"
#48
b11110000 D
b11110000 P
b11110000 -"
0#
#52
1#
#53
b10 I
b10 \
b10 O
b10 S
b0 d
b10 c
b10 a
b0 j
b10 i
b10 g
b10 K
b10 W
b10 =
b10 L
b10 Q
b10 U
b10 X
b10 Z
b10 ]
b10 _
b10 e
b10 m
b10 ?
b10 k
b10 x
b10 2
b10 |
b10 2"
b101 3
b101 {
b101 0"
b1010 5
b1010 t
b1010 z
b1010000001010000010100000010 "
b1010000001010000010100000010 &
b1010000001010000010100000010 v
b11000 !
b11000 4
b11000 ,"
b11110000 A"
#54
b11100 9
b11100 %"
b11100 *"
b110000 C
b110000 p
b110000 q
b11100 @
b11100 s
b11100 #"
b110000 <
b110000 ""
b110000 $"
b11100 6
b11100 n
b11100 r
b11100 ~
b11100 +"
b10 D
b10 P
b10 -"
b110 E
b110 G
b110 u
#55
b100 +
b100 l
b100 9"
b11110010 I
b11110010 \
b11110010 O
b11110010 S
b0 d
b10 c
b11000000 H
b11000000 b
b0 j
b10 i
b11000000 F
b11000000 h
b100 0
b100 1"
b100 7"
b100 :"
b11100000 J
b11100000 Y
b11110000 1
b11110000 M
b11110000 R
b11110000 V
b11110000 [
b11110000 ^
b11110000 `
b11110000 f
b11110000 /"
#56
b11111100 -
b11111100 8"
b11111100 ;"
0#
#57
b11000000 D
b11000000 P
b11000000 -"
#60
1#
#61
b11111110 I
b11111110 \
b11110000 N
b11110000 T
b11101110 O
b11101110 S
b1000 d
b10 c
b11111100 H
b11111100 b
b1000 j
b10 i
b111100 F
b111100 h
b100000 J
b100000 Y
b11111110 K
b11111110 W
b11111110 =
b11111110 L
b11111110 Q
b11111110 U
b11111110 X
b11111110 Z
b11111110 ]
b11111110 _
b11111110 e
b11111110 m
b11111110 ?
b11111110 k
b11111110 x
b110 2
b110 |
b110 2"
b11000000 A"
b1010000001010000010111111110 "
b1010000001010000010111111110 &
b1010000001010000010111111110 v
b11100 !
b11100 4
b11100 ,"
#62
b100000 9
b100000 %"
b100000 *"
b110100 C
b110100 p
b110100 q
b100000 @
b100000 s
b100000 #"
b110100 <
b110100 ""
b110100 $"
b100000 6
b100000 n
b100000 r
b100000 ~
b100000 +"
#63
b0 +
b0 l
b0 9"
b11000000 N
b11000000 T
b10111110 O
b10111110 S
b1000 d
b10 c
b11110000 H
b11110000 b
b1000 j
b10 i
b110000 F
b110000 h
b11111100 D
b11111100 P
b11111100 -"
b0 0
b0 1"
b0 7"
b0 :"
b10000000 J
b10000000 Y
b11000000 1
b11000000 M
b11000000 R
b11000000 V
b11000000 [
b11000000 ^
b11000000 `
b11000000 f
b11000000 /"
#64
b0 -
b0 8"
b0 ;"
0#
#65
b11110000 D
b11110000 P
b11110000 -"
#68
1#
#69
bx <
bx ""
bx $"
bx C
bx p
bx q
b0xxxxxxxx00 7
b0xxxxxxxx00 !"
b0xxxxxxxx00 )"
b0xxxxxxxx00 8
b0xxxxxxxx00 o
b0xxxxxxxx00 '"
b11xxxxxx I
b11xxxxxx \
bx000000 N
bx000000 T
bx O
bx S
b11000000 H
b11000000 b
b11000000 F
b11000000 h
b0xxxxxxxx .
b0xxxxxxxx ("
b0xxxxxxxx 6"
b0xxxxxxxx /
b0xxxxxxxx &"
b0xxxxxxxx 4"
bx J
bx Y
bx K
bx W
bx =
bx L
bx Q
bx U
bx X
bx Z
bx ]
bx _
bx e
bx m
bx ;
bx y
bx 5"
bx B
bx w
bx 3"
bx ?
bx k
bx x
bx )
bx }
bx ."
bx 2
bx |
bx 2"
bx 3
bx {
bx 0"
bx 5
bx t
bx z
bx "
bx &
bx v
b100000 !
b100000 4
b100000 ,"
b11110000 A"
#70
b100100 9
b100100 %"
b100100 *"
b100100 @
b100100 s
b100100 #"
b100100 6
b100100 n
b100100 r
b100100 ~
b100100 +"
b11000000 I
b11000000 \
b0 N
b0 T
b11000000 O
b11000000 S
b0 c
b0 a
b0 i
b0 g
b0 J
b0 Y
b0 K
b0 W
b0 =
b0 L
b0 Q
b0 U
b0 X
b0 Z
b0 ]
b0 _
b0 e
b0 m
0*
0>
b0 E
b0 G
b0 u
#71
bx N
bx T
bx K
bx W
bx =
bx L
bx Q
bx U
bx X
bx Z
bx ]
bx _
bx e
bx m
bx +
bx l
bx 9"
bx I
bx \
bx O
bx S
bx H
bx b
bx F
bx h
b11000000 D
b11000000 P
b11000000 -"
bx 0
bx 1"
bx 7"
bx :"
bx J
bx Y
bx 1
bx M
bx R
bx V
bx [
bx ^
bx `
bx f
bx /"
#72
bx D
bx P
bx -"
bx -
bx 8"
bx ;"
0#
#76
1#
#77
b100100 !
b100100 4
b100100 ,"
#78
b101000 9
b101000 %"
b101000 *"
b101000 @
b101000 s
b101000 #"
b101000 6
b101000 n
b101000 r
b101000 ~
b101000 +"
#80
0#
#84
1#
#85
b101000 !
b101000 4
b101000 ,"
#86
b101100 9
b101100 %"
b101100 *"
b101100 @
b101100 s
b101100 #"
b101100 6
b101100 n
b101100 r
b101100 ~
b101100 +"
#88
0#
#92
1#
#93
b101100 !
b101100 4
b101100 ,"
#94
b110000 9
b110000 %"
b110000 *"
b110000 @
b110000 s
b110000 #"
b110000 6
b110000 n
b110000 r
b110000 ~
b110000 +"
#96
0#
#100
1#
#101
b110000 !
b110000 4
b110000 ,"
#102
b110100 9
b110100 %"
b110100 *"
b110100 @
b110100 s
b110100 #"
b110100 6
b110100 n
b110100 r
b110100 ~
b110100 +"
#104
0#
#108
1#
#109
b110100 !
b110100 4
b110100 ,"
#110
b111000 9
b111000 %"
b111000 *"
b111000 @
b111000 s
b111000 #"
b111000 6
b111000 n
b111000 r
b111000 ~
b111000 +"
#112
0#
#116
1#
#117
b111000 !
b111000 4
b111000 ,"
#118
b111100 9
b111100 %"
b111100 *"
b111100 @
b111100 s
b111100 #"
b111100 6
b111100 n
b111100 r
b111100 ~
b111100 +"
#120
0#
#124
1#
#125
b111100 !
b111100 4
b111100 ,"
#126
b1000000 9
b1000000 %"
b1000000 *"
b1000000 @
b1000000 s
b1000000 #"
b1000000 6
b1000000 n
b1000000 r
b1000000 ~
b1000000 +"
#128
0#
#132
1#
#133
b1000000 !
b1000000 4
b1000000 ,"
#134
b1000100 9
b1000100 %"
b1000100 *"
b1000100 @
b1000100 s
b1000100 #"
b1000100 6
b1000100 n
b1000100 r
b1000100 ~
b1000100 +"
#136
0#
#140
1#
#141
b1000100 !
b1000100 4
b1000100 ,"
#142
b1001000 9
b1001000 %"
b1001000 *"
b1001000 @
b1001000 s
b1001000 #"
b1001000 6
b1001000 n
b1001000 r
b1001000 ~
b1001000 +"
#144
0#
#148
1#
#149
b1001000 !
b1001000 4
b1001000 ,"
#150
b1001100 9
b1001100 %"
b1001100 *"
b1001100 @
b1001100 s
b1001100 #"
b1001100 6
b1001100 n
b1001100 r
b1001100 ~
b1001100 +"
#152
0#
#156
1#
#157
b1001100 !
b1001100 4
b1001100 ,"
#158
b1010000 9
b1010000 %"
b1010000 *"
b1010000 @
b1010000 s
b1010000 #"
b1010000 6
b1010000 n
b1010000 r
b1010000 ~
b1010000 +"
#160
0#
#164
1#
#165
b1010000 !
b1010000 4
b1010000 ,"
#166
b1010100 9
b1010100 %"
b1010100 *"
b1010100 @
b1010100 s
b1010100 #"
b1010100 6
b1010100 n
b1010100 r
b1010100 ~
b1010100 +"
#168
0#
#172
1#
#173
b1010100 !
b1010100 4
b1010100 ,"
#174
b1011000 9
b1011000 %"
b1011000 *"
b1011000 @
b1011000 s
b1011000 #"
b1011000 6
b1011000 n
b1011000 r
b1011000 ~
b1011000 +"
#176
0#
#180
1#
#181
b1011000 !
b1011000 4
b1011000 ,"
#182
b1011100 9
b1011100 %"
b1011100 *"
b1011100 @
b1011100 s
b1011100 #"
b1011100 6
b1011100 n
b1011100 r
b1011100 ~
b1011100 +"
#184
0#
#188
1#
#189
b1011100 !
b1011100 4
b1011100 ,"
#190
b1100000 9
b1100000 %"
b1100000 *"
b1100000 @
b1100000 s
b1100000 #"
b1100000 6
b1100000 n
b1100000 r
b1100000 ~
b1100000 +"
#192
0#
#196
1#
#197
b1100000 !
b1100000 4
b1100000 ,"
#198
b1100100 9
b1100100 %"
b1100100 *"
b1100100 @
b1100100 s
b1100100 #"
b1100100 6
b1100100 n
b1100100 r
b1100100 ~
b1100100 +"
#200
0#
#204
1#
#205
b1100100 !
b1100100 4
b1100100 ,"
#206
b1101000 9
b1101000 %"
b1101000 *"
b1101000 @
b1101000 s
b1101000 #"
b1101000 6
b1101000 n
b1101000 r
b1101000 ~
b1101000 +"
#208
0#
#212
1#
#213
b1101000 !
b1101000 4
b1101000 ,"
#214
b1101100 9
b1101100 %"
b1101100 *"
b1101100 @
b1101100 s
b1101100 #"
b1101100 6
b1101100 n
b1101100 r
b1101100 ~
b1101100 +"
#216
0#
#220
1#
#221
b1101100 !
b1101100 4
b1101100 ,"
#222
b1110000 9
b1110000 %"
b1110000 *"
b1110000 @
b1110000 s
b1110000 #"
b1110000 6
b1110000 n
b1110000 r
b1110000 ~
b1110000 +"
#224
0#
#228
1#
#229
b1110000 !
b1110000 4
b1110000 ,"
#230
b1110100 9
b1110100 %"
b1110100 *"
b1110100 @
b1110100 s
b1110100 #"
b1110100 6
b1110100 n
b1110100 r
b1110100 ~
b1110100 +"
#232
0#
#236
1#
#237
b1110100 !
b1110100 4
b1110100 ,"
#238
b1111000 9
b1111000 %"
b1111000 *"
b1111000 @
b1111000 s
b1111000 #"
b1111000 6
b1111000 n
b1111000 r
b1111000 ~
b1111000 +"
#240
0#
#244
1#
#245
b1111000 !
b1111000 4
b1111000 ,"
#246
b1111100 9
b1111100 %"
b1111100 *"
b1111100 @
b1111100 s
b1111100 #"
b1111100 6
b1111100 n
b1111100 r
b1111100 ~
b1111100 +"
#248
0#
#252
1#
#253
b1111100 !
b1111100 4
b1111100 ,"
#254
b10000000 9
b10000000 %"
b10000000 *"
b10000000 @
b10000000 s
b10000000 #"
b10000000 6
b10000000 n
b10000000 r
b10000000 ~
b10000000 +"
#256
0#
#260
1#
#261
b10000000 !
b10000000 4
b10000000 ,"
#262
b10000100 9
b10000100 %"
b10000100 *"
b10000100 @
b10000100 s
b10000100 #"
b10000100 6
b10000100 n
b10000100 r
b10000100 ~
b10000100 +"
#264
0#
#268
1#
#269
b10000100 !
b10000100 4
b10000100 ,"
#270
b10001000 9
b10001000 %"
b10001000 *"
b10001000 @
b10001000 s
b10001000 #"
b10001000 6
b10001000 n
b10001000 r
b10001000 ~
b10001000 +"
#272
0#
#276
1#
#277
b10001000 !
b10001000 4
b10001000 ,"
#278
b10001100 9
b10001100 %"
b10001100 *"
b10001100 @
b10001100 s
b10001100 #"
b10001100 6
b10001100 n
b10001100 r
b10001100 ~
b10001100 +"
#280
0#
#284
1#
#285
b10001100 !
b10001100 4
b10001100 ,"
#286
b10010000 9
b10010000 %"
b10010000 *"
b10010000 @
b10010000 s
b10010000 #"
b10010000 6
b10010000 n
b10010000 r
b10010000 ~
b10010000 +"
#288
0#
#292
1#
#293
b10010000 !
b10010000 4
b10010000 ,"
#294
b10010100 9
b10010100 %"
b10010100 *"
b10010100 @
b10010100 s
b10010100 #"
b10010100 6
b10010100 n
b10010100 r
b10010100 ~
b10010100 +"
#296
0#
#300
1#
#301
b10010100 !
b10010100 4
b10010100 ,"
#302
b10011000 9
b10011000 %"
b10011000 *"
b10011000 @
b10011000 s
b10011000 #"
b10011000 6
b10011000 n
b10011000 r
b10011000 ~
b10011000 +"
#304
0#
#306
